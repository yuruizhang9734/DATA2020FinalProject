print(dim(data_shoot))
# Missing data - to check the percent of not missing data points in each columns
apply(data_shoot, 2, function(x) sum(complete.cases(x))/nrow(data_shoot))
vis_miss(data_shoot)
missing_pattern(data_shoot)
# For our variable manner_of_death
length(unique(data_shoot$id))
# For our variable name
length(unique(data_shoot$name))
# For our variable manner_of_death
length(unique(data_shoot$date))
data_shoot$Year <- year(data_shoot$date)
data_shoot$Month <- month(data_shoot$date)
data_shoot$WeekDay <- weekdays(data_shoot$date)
data_shoot$Year <- as.factor(data_shoot$Year)
data_shoot$Month <- as.factor(data_shoot$Month)
data_shoot$WeekDay <- as.factor(data_shoot$WeekDay)
# For our variable manner_of_death
unique(data_shoot$manner_of_death)
data_shoot$manner_of_death <- as.factor(data_shoot$manner_of_death)
# For our variable armed
# long_dis_death, long_dis_not_death, short_dis_death, short_dis_not_death,
long_dis_death <- c("gun","guns and explosives","crossbow","gun and knife","hatchet and gun","machete and gun","gun and sword","gun and car","pellet gun","bow and arrow","gun and vehicle","vehicle and gun","grenade","air pistol","gun and machete")
long_dis_not_death <- c("toy weapon","nail gun","BB gun","Taser","bean-bag gun","hand torch","pepper spray","fireworks","incendiary device","Airsoft pistol")
short_dis_death <- c("knife","hatchet","sword","machete","sharp object","meat cleaver","straight edge razor","ax","chain saw","scissors","pick-axe","spear","pitchfork","glass shard","metal rake","pole and knife","chainsaw","samurai sword","baseball bat and knife","ice pick","machete and hammer")
short_dis_not_death <- c("shovel","hammer","box cutter","metal object","screwdriver","lawn mower blade","flagpole","cordless drill","metal pole","metal pipe","metal hand tool","blunt object","metal stick","chain","contractor's level","railroad spikes","stapler","beer bottle","binoculars","baseball bat and fireplace poker","brick","baseball bat","garden tool","pipe","flashlight","baton","chair","rock","piece of wood","pole","crowbar","oar","tire iron","air conditioner","baseball bat and bottle","pen","wrench","walking stick","barstool","wasp spray","bottle","microphone","stake")
vehicles <- c("vehicle","carjack","motorcycle","BB gun and vehicle","vehicle and machete","car, knife and mace","knife and vehicle")
undetermined <- c("undetermined","unknown weapon","claimed to be armed")
unarmed <- c("unarmed")
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% long_dis_death, "armed_level"] <- "long_dis_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% long_dis_not_death, "armed_level"] <- "long_dis_not_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% short_dis_death, "armed_level"] <- "short_dis_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% short_dis_not_death, "armed_level"] <- "short_dis_not_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% vehicles, "armed_level"] <- "vehicles"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% undetermined, "armed_level"] <- "undetermined"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% unarmed, "armed_level"] <- "unarmed"
data_shoot$armed_level <- as.factor(data_shoot$armed_level)
# For our variable armed
# divide into several ranges
# 0-18 pre-young, 18-35 young adulthood 35-55 middle age 55 older adulthood
unique(data_shoot$age)
data_shoot[is.na(data_shoot$age)== FALSE & data_shoot$age > 0 & data_shoot$age <= 18, "age_group"] <- "(0-18) pre-young"
data_shoot[is.na(data_shoot$age)== FALSE & data_shoot$age > 18 & data_shoot$age <= 35, "age_group"] <- "(18-35) young adulthood"
data_shoot[is.na(data_shoot$age) == FALSE & data_shoot$age > 35 & data_shoot$age <= 55, "age_group"] <- "(35-55) middle age"
data_shoot[is.na(data_shoot$age) == FALSE & data_shoot$age > 55, "age_group"] <- "(>55) older adulthood"
unique(data_shoot$age_group)
data_shoot$age_group <- as.factor(data_shoot$age_group)
# For our variable gender
unique(data_shoot$gender)
data_shoot$gender <- as.factor(data_shoot$gender)
# For our variable armed
unique(data_shoot$race)
data_shoot$race <- as.factor(data_shoot$race)
# For our variable armed
length(unique(data_shoot$city))
# For our variable armed
unique(data_shoot$state)
data_shoot$state <- as.factor(data_shoot$state)
north_east <- c("MA", "RI", "CT", "VT", "NH", "ME", "PA", "NJ", "NY")
south_east <- c("DC", "GA", "NC", "SC", "VA", "WV", "KY", "TN", "MS", "AL", "DE", "MD", "FL", "LA", "AR")
mid_west <- c("MN", "WI", "IL", "OH", "IN", "MI", "MO", "IA", "KS", "NE", "ND", "SD")
south_west <- c("NM", "AZ", "OK", "TX")
the_west <- c("CA", "CO", "NV", "HI", "AK", "OR", "UT", "ID", "MT", "WY", "WA")
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% north_east, "state_loc"] <- "north_east"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% south_east, "state_loc"] <- "south_east"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% mid_west, "state_loc"] <- "mid_west"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% south_west, "state_loc"] <- "south_west"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% the_west, "state_loc"] <- "the_west"
unique(data_shoot$state_loc)
data_shoot$state_loc <- as.factor(data_shoot$state_loc)
unique(data_shoot$signs_of_mental_illness)
data_shoot$signs_of_mental_illness <- as.factor(data_shoot$signs_of_mental_illness)
unique(data_shoot$threat_level)
data_shoot$threat_level <- as.factor(data_shoot$threat_level)
unique(data_shoot$flee)
data_shoot$flee <- as.factor(data_shoot$flee)
unique(data_shoot$body_camera)
data_shoot$body_camera <- as.factor(data_shoot$body_camera)
names(data_shoot)
state_race <- read_csv("~/Desktop/Brown/Brown_class/2022_Spring/DATA2020/Final_project/state_race.csv")
state_race_reform <- melt(state_race, id = c("State","Total"))
names(state_race_reform)<- c('state', 'Total_population_by_state', 'race', 'Race_population_by_state')
state_race_reform
state_race_reform_a <- state_race_reform %>% dplyr::select(state, Total_population_by_state)
state_race_reform_b <- state_race_reform %>% dplyr::select(state, race, Race_population_by_state)
data_shoot <- merge(data_shoot, state_race_reform_b, by=c("state","race"),all.x=TRUE)
sum(is.na(data_shoot$Total_population_by_state))
state_income <- read_csv("~/Desktop/Brown/Brown_class/2022_Spring/DATA2020/Final_project/Personal_income_by_states.csv")
state_income_reform <- melt(state_income, id = c("state"))
names(state_income_reform)<- c('state', 'year_qtr', 'personal_income_sum_whole_state')
state_income_reform
library(zoo)
data_shoot$year_qtr <- format(as.yearqtr(data_shoot$date, format = "%Y-%m-%d"), format = "%Y:Q%q")
data_shoot <- merge(data_shoot, state_income_reform, by=c("state","year_qtr"),all.x=TRUE)
summary(data_shoot)
# Convert to Date (for time series plot)
data_shoot_eda <- data_shoot
data_shoot_eda$count <- 1
print(summary(data_shoot_eda))
ggplot(data_shoot, aes(x = manner_of_death)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = gender)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = race)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = signs_of_mental_illness)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = threat_level)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = body_camera)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = Year)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = armed_level)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = state_loc)) +
geom_bar()
data_shoot_eda
theme_set(theme_classic())
# Histogram on a Categorical variable
g <- ggplot(data_shoot_eda, aes(state_loc))
g +geom_bar(aes(fill=race), width = 0.5) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9)) +
xlab("States Regions") +
ylab("Fatal Shootings") +
labs(title="Stacked Barplot on Categorical Variable",
subtitle="State Regions across Different Race")
ggplot(data_shoot_eda, aes(x=age, color=gender)) +
geom_histogram(fill="white", position="dodge")+
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
xlab("Age") +
ylab("Fatal Shootings") +
labs(title="Histogram Plot on Categorical Variable",
subtitle="Age across Gender")
ggplot(data_shoot_eda, aes(x=race, y= age)) +
geom_boxplot()
ggplot(data = data_shoot_eda, aes(x = state_loc, y = count)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
data_shoot_eda
library(dplyr)
data_shoot_eda <-data_shoot_eda %>% distinct()
library(forcats)
# Creating Race table
Race_data_no_population <- data_shoot_eda %>% group_by(state) %>% summarise(counts = sum(count))
Race_data_no_population
Race_data_no_population <- Race_data_no_population[order(-Race_data_no_population$counts),]
Race_data_no_population %>%
mutate(state = fct_reorder(state,counts)) %>%
slice(1:10) %>%
ggplot(aes(x=reorder(state,counts), y=counts)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#4682B4", alpha=.6, width=.4) +
geom_text(aes(label=counts), hjust=0, color="black", size=3.5)+
coord_flip() +
xlab("States") +
ylab("Total Fatal Shootings") +
labs(title="Barplot of Total Fatal Shootings",
subtitle="Top 10 States with Most Total Fatal Shootings")+
theme_bw()
# Creating Race table
names(state_race)<- c('state', 'Total_population_by_state', 'H', 'W', 'B','N','A',"O")
Race_data_with_population <- merge(Race_data_no_population, state_race, by=c("state"),all.x=TRUE)
Race_data_with_population$counts_per <- round(Race_data_with_population$count/Race_data_with_population$Total_population_by_state * 1000,digits = 5)
Race_data_with_population <- Race_data_with_population[order(-Race_data_with_population$counts_per),]
Race_data_with_population%>%
slice(1:10) %>%
ggplot(aes(x=reorder(state,counts_per), y=counts_per)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#EA9999", alpha=.6, width=.4) +
geom_text(aes(label=counts_per), hjust=0, color="black", size=3.5)+
coord_flip() +
xlab("States") +
ylab("Fatal shootings every 1000 people in the state") +
labs(title="Barplot of Fatal Shootings every 1000 people from 2015-2021",
subtitle="Top 10 States with Most Total Fatal Shootings every 1000 people from 2015-2021")+
theme_bw()
plot_usmap(data = Race_data_no_population, values = "counts",labels=TRUE,label_color = "white") +
scale_fill_viridis_c(name = "Total Fatal Shootings")+
theme(legend.position = "right")+
labs(title="Map plot of total Fatal Shootings",
subtitle="Total Fatal Shootings ")
Race_data_with_population
plot_usmap(data = Race_data_with_population, values = "counts_per",labels=TRUE,label_color = "white") +
scale_fill_viridis_c(name = "Fatal Shootings every 1000 people")+
theme(legend.position = "right")+
labs(title="Map plot of Fatal Shootings every 1000 people",
subtitle="Fatal Shootings every 1000 people")
data_by_race <- data_shoot_eda %>% group_by(race) %>% summarise(counts = sum(count))
data_by_race %>%
mutate(race = fct_reorder(race, counts)) %>%
ggplot(aes(x=race, y=counts)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#93c47d", alpha=.6, width=.4) +
geom_text(aes(label=counts), hjust=0.2, color="black", size=3.5)+
coord_flip() +
xlab("Race") +
ylab("Total fatal shootings") +
labs(title="Barplot of Total Fatal Shootings",
subtitle="Total Fatal Shootings for different races")+
theme_bw()
data_by_race
data_by_race$total_in_us <- c(17708954,39977554,58479370,2160378,9271166,197100373,10^100)
data_by_race$counts_per_1000 <- round(data_by_race$counts/data_by_race$total_in_us * 1000,digits=5)
data_by_race %>%
mutate(race = fct_reorder(race, counts_per_1000)) %>%
ggplot(aes(x=race, y=counts_per_1000)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#8e7cc3", alpha=.6, width=.4) +
geom_text(aes(label=counts_per_1000), hjust=0.2, color="black", size=3.5)+
coord_flip() +
xlab("Race") +
ylab("Fatal shootings every 1000 people in such race") +
labs(title="Barplot of Fatal Shootings every 1000 people from 2015-2021",
subtitle="Fatal Shootings every 1000 people for different races from 2015-2021")+
theme_bw()
data_by_race
data_state_loc <- data_shoot_eda  %>% group_by(state_loc,state) %>% summarise(counts = sum(count))
data_state_loc <- merge(data_state_loc, state_race, by=c("state"),all.x=TRUE)
state_income$mean_over_time <- rowMeans(state_income[,-1])
data_state_loc <- merge(data_state_loc, state_income, by=c("state"),all.x=TRUE)
data_state_loc$counts_per <- data_state_loc$counts/data_state_loc$Total_population_by_state * 1000
data_state_loc$mean_over_time_per <- data_state_loc$mean_over_time/data_state_loc$Total_population_by_state * 1000000
# Scatterplot
gg <- ggplot(data_state_loc, aes(x=mean_over_time_per, y=Total_population_by_state)) +
geom_point(aes(col=state_loc, size=counts_per)) +
xlim(c(30000, 100000)) +
ylim(c(0, 10000000)) +
labs(subtitle="Per Capita Mean Annual Personal income Vs Population",
y="Population of State",
x="Per Capita Mean Annual Personal income ($dollars)",
title="Scatterplot")
gg
geo(address = c("Tokyo", "Lima", "Nairobi"),
method = 'osm')
library(rworldmap)
# get map
worldmap <- getMap(resolution = "coarse")
plot(worldmap, xlim = c(-80, 160), ylim = c(-50, 100),
asp = 1, bg = "lightblue", col = "black", fill = T)
points(data_shoot$Longitude, data_shoot$Latitude,
col = "red", cex = .01)
plot_loc <- ggplot(data_shoot_eda, aes(x=longitude, y=latitude)) + geom_point()
print(plot_loc + ggtitle("police killed people locations all over us"))
# Creating Race table
data_shoot_eda_race <- data_shoot_eda%>% group_by(state) %>% summarise(counts = sum(count)/Total_population)
knitr::opts_chunk$set(echo = TRUE)
# Load the needed packages
library(dplyr)
library(caret)
library(glmnet)
library(MASS)
library(InformationValue)
library(tidyverse)
library(naniar)
library(ggplot2)
library(lubridate)
library(visdat)
library(finalfit)
library(GGally)
library(ggmap)
library(tidygeocoder)
library(usmap)
library(reshape2)
# Load the needed dataset
data_shoot <- read_csv("~/Desktop/Brown/Brown_class/2022_Spring/DATA2020/Final_project/data-police-shootings-master/fatal-police-shootings-data.csv")
# make a copy of the readed in data just in case
data_shoot_not_change <- data_shoot
head(data_shoot, 10)
names(data_shoot)
print(dim(data_shoot))
# Missing data - to check the percent of not missing data points in each columns
apply(data_shoot, 2, function(x) sum(complete.cases(x))/nrow(data_shoot))
vis_miss(data_shoot)
missing_pattern(data_shoot)
# For our variable manner_of_death
length(unique(data_shoot$id))
# For our variable name
length(unique(data_shoot$name))
# For our variable manner_of_death
length(unique(data_shoot$date))
data_shoot$Year <- year(data_shoot$date)
data_shoot$Month <- month(data_shoot$date)
data_shoot$WeekDay <- weekdays(data_shoot$date)
data_shoot$Year <- as.factor(data_shoot$Year)
data_shoot$Month <- as.factor(data_shoot$Month)
data_shoot$WeekDay <- as.factor(data_shoot$WeekDay)
# For our variable manner_of_death
unique(data_shoot$manner_of_death)
data_shoot$manner_of_death <- as.factor(data_shoot$manner_of_death)
# For our variable armed
# long_dis_death, long_dis_not_death, short_dis_death, short_dis_not_death,
long_dis_death <- c("gun","guns and explosives","crossbow","gun and knife","hatchet and gun","machete and gun","gun and sword","gun and car","pellet gun","bow and arrow","gun and vehicle","vehicle and gun","grenade","air pistol","gun and machete")
long_dis_not_death <- c("toy weapon","nail gun","BB gun","Taser","bean-bag gun","hand torch","pepper spray","fireworks","incendiary device","Airsoft pistol")
short_dis_death <- c("knife","hatchet","sword","machete","sharp object","meat cleaver","straight edge razor","ax","chain saw","scissors","pick-axe","spear","pitchfork","glass shard","metal rake","pole and knife","chainsaw","samurai sword","baseball bat and knife","ice pick","machete and hammer")
short_dis_not_death <- c("shovel","hammer","box cutter","metal object","screwdriver","lawn mower blade","flagpole","cordless drill","metal pole","metal pipe","metal hand tool","blunt object","metal stick","chain","contractor's level","railroad spikes","stapler","beer bottle","binoculars","baseball bat and fireplace poker","brick","baseball bat","garden tool","pipe","flashlight","baton","chair","rock","piece of wood","pole","crowbar","oar","tire iron","air conditioner","baseball bat and bottle","pen","wrench","walking stick","barstool","wasp spray","bottle","microphone","stake")
vehicles <- c("vehicle","carjack","motorcycle","BB gun and vehicle","vehicle and machete","car, knife and mace","knife and vehicle")
undetermined <- c("undetermined","unknown weapon","claimed to be armed")
unarmed <- c("unarmed")
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% long_dis_death, "armed_level"] <- "long_dis_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% long_dis_not_death, "armed_level"] <- "long_dis_not_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% short_dis_death, "armed_level"] <- "short_dis_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% short_dis_not_death, "armed_level"] <- "short_dis_not_death"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% vehicles, "armed_level"] <- "vehicles"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% undetermined, "armed_level"] <- "undetermined"
data_shoot[is.na(data_shoot$armed)==FALSE & data_shoot$armed %in% unarmed, "armed_level"] <- "unarmed"
data_shoot$armed_level <- as.factor(data_shoot$armed_level)
# For our variable armed
# divide into several ranges
# 0-18 pre-young, 18-35 young adulthood 35-55 middle age 55 older adulthood
unique(data_shoot$age)
data_shoot[is.na(data_shoot$age)== FALSE & data_shoot$age > 0 & data_shoot$age <= 18, "age_group"] <- "(0-18) pre-young"
data_shoot[is.na(data_shoot$age)== FALSE & data_shoot$age > 18 & data_shoot$age <= 35, "age_group"] <- "(18-35) young adulthood"
data_shoot[is.na(data_shoot$age) == FALSE & data_shoot$age > 35 & data_shoot$age <= 55, "age_group"] <- "(35-55) middle age"
data_shoot[is.na(data_shoot$age) == FALSE & data_shoot$age > 55, "age_group"] <- "(>55) older adulthood"
unique(data_shoot$age_group)
data_shoot$age_group <- as.factor(data_shoot$age_group)
# For our variable gender
unique(data_shoot$gender)
data_shoot$gender <- as.factor(data_shoot$gender)
# For our variable armed
unique(data_shoot$race)
data_shoot$race <- as.factor(data_shoot$race)
# For our variable armed
length(unique(data_shoot$city))
# For our variable armed
unique(data_shoot$state)
data_shoot$state <- as.factor(data_shoot$state)
north_east <- c("MA", "RI", "CT", "VT", "NH", "ME", "PA", "NJ", "NY")
south_east <- c("DC", "GA", "NC", "SC", "VA", "WV", "KY", "TN", "MS", "AL", "DE", "MD", "FL", "LA", "AR")
mid_west <- c("MN", "WI", "IL", "OH", "IN", "MI", "MO", "IA", "KS", "NE", "ND", "SD")
south_west <- c("NM", "AZ", "OK", "TX")
the_west <- c("CA", "CO", "NV", "HI", "AK", "OR", "UT", "ID", "MT", "WY", "WA")
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% north_east, "state_loc"] <- "north_east"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% south_east, "state_loc"] <- "south_east"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% mid_west, "state_loc"] <- "mid_west"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% south_west, "state_loc"] <- "south_west"
data_shoot[is.na(data_shoot$state)==FALSE & data_shoot$state %in% the_west, "state_loc"] <- "the_west"
unique(data_shoot$state_loc)
data_shoot$state_loc <- as.factor(data_shoot$state_loc)
unique(data_shoot$signs_of_mental_illness)
data_shoot$signs_of_mental_illness <- as.factor(data_shoot$signs_of_mental_illness)
unique(data_shoot$threat_level)
data_shoot$threat_level <- as.factor(data_shoot$threat_level)
unique(data_shoot$flee)
data_shoot$flee <- as.factor(data_shoot$flee)
unique(data_shoot$body_camera)
data_shoot$body_camera <- as.factor(data_shoot$body_camera)
names(data_shoot)
state_race <- read_csv("~/Desktop/Brown/Brown_class/2022_Spring/DATA2020/Final_project/state_race.csv")
state_race_reform <- melt(state_race, id = c("State","Total"))
names(state_race_reform)<- c('state', 'Total_population_by_state', 'race', 'Race_population_by_state')
state_race_reform
state_race_reform_a <- state_race_reform %>% dplyr::select(state, Total_population_by_state)
state_race_reform_b <- state_race_reform %>% dplyr::select(state, race, Race_population_by_state)
data_shoot <- merge(data_shoot, state_race_reform_b, by=c("state","race"),all.x=TRUE)
sum(is.na(data_shoot$Total_population_by_state))
state_income <- read_csv("~/Desktop/Brown/Brown_class/2022_Spring/DATA2020/Final_project/Personal_income_by_states.csv")
state_income_reform <- melt(state_income, id = c("state"))
names(state_income_reform)<- c('state', 'year_qtr', 'personal_income_sum_whole_state')
state_income_reform
library(zoo)
data_shoot$year_qtr <- format(as.yearqtr(data_shoot$date, format = "%Y-%m-%d"), format = "%Y:Q%q")
data_shoot <- merge(data_shoot, state_income_reform, by=c("state","year_qtr"),all.x=TRUE)
summary(data_shoot)
# Convert to Date (for time series plot)
data_shoot_eda <- data_shoot
data_shoot_eda$count <- 1
print(summary(data_shoot_eda))
ggplot(data_shoot, aes(x = manner_of_death)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = gender)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = race)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = signs_of_mental_illness)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = threat_level)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = body_camera)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = Year)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = armed_level)) +
geom_bar()
ggplot(data_shoot_eda, aes(x = state_loc)) +
geom_bar()
data_shoot_eda
theme_set(theme_classic())
# Histogram on a Categorical variable
g <- ggplot(data_shoot_eda, aes(state_loc))
g +geom_bar(aes(fill=race), width = 0.5) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9)) +
xlab("States Regions") +
ylab("Fatal Shootings") +
labs(title="Stacked Barplot on Categorical Variable",
subtitle="State Regions across Different Race")
ggplot(data_shoot_eda, aes(x=age, color=gender)) +
geom_histogram(fill="white", position="dodge")+
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
xlab("Age") +
ylab("Fatal Shootings") +
labs(title="Histogram Plot on Categorical Variable",
subtitle="Age across Gender")
ggplot(data_shoot_eda, aes(x=race, y= age)) +
geom_boxplot()
ggplot(data = data_shoot_eda, aes(x = state_loc, y = count)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
data_shoot_eda
library(dplyr)
data_shoot_eda <-data_shoot_eda %>% distinct()
library(forcats)
# Creating Race table
Race_data_no_population <- data_shoot_eda %>% group_by(state) %>% summarise(counts = sum(count))
Race_data_no_population
Race_data_no_population <- Race_data_no_population[order(-Race_data_no_population$counts),]
Race_data_no_population %>%
mutate(state = fct_reorder(state,counts)) %>%
slice(1:10) %>%
ggplot(aes(x=reorder(state,counts), y=counts)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#4682B4", alpha=.6, width=.4) +
geom_text(aes(label=counts), hjust=0, color="black", size=3.5)+
coord_flip() +
xlab("States") +
ylab("Total Fatal Shootings") +
labs(title="Barplot of Total Fatal Shootings",
subtitle="Top 10 States with Most Total Fatal Shootings")+
theme_bw()
# Creating Race table
names(state_race)<- c('state', 'Total_population_by_state', 'H', 'W', 'B','N','A',"O")
Race_data_with_population <- merge(Race_data_no_population, state_race, by=c("state"),all.x=TRUE)
Race_data_with_population$counts_per <- round(Race_data_with_population$count/Race_data_with_population$Total_population_by_state * 1000,digits = 5)
Race_data_with_population <- Race_data_with_population[order(-Race_data_with_population$counts_per),]
Race_data_with_population%>%
slice(1:10) %>%
ggplot(aes(x=reorder(state,counts_per), y=counts_per)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#EA9999", alpha=.6, width=.4) +
geom_text(aes(label=counts_per), hjust=0, color="black", size=3.5)+
coord_flip() +
xlab("States") +
ylab("Fatal shootings every 1000 people in the state") +
labs(title="Barplot of Fatal Shootings every 1000 people from 2015-2021",
subtitle="Top 10 States with Most Total Fatal Shootings every 1000 people from 2015-2021")+
theme_bw()
plot_usmap(data = Race_data_no_population, values = "counts",labels=TRUE,label_color = "white") +
scale_fill_viridis_c(name = "Total Fatal Shootings")+
theme(legend.position = "right")+
labs(title="Map plot of total Fatal Shootings",
subtitle="Total Fatal Shootings ")
Race_data_with_population
plot_usmap(data = Race_data_with_population, values = "counts_per",labels=TRUE,label_color = "white") +
scale_fill_viridis_c(name = "Fatal Shootings every 1000 people")+
theme(legend.position = "right")+
labs(title="Map plot of Fatal Shootings every 1000 people",
subtitle="Fatal Shootings every 1000 people")
data_by_race <- data_shoot_eda %>% group_by(race) %>% summarise(counts = sum(count))
data_by_race %>%
mutate(race = fct_reorder(race, counts)) %>%
ggplot(aes(x=race, y=counts)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#93c47d", alpha=.6, width=.4) +
geom_text(aes(label=counts), hjust=0.2, color="black", size=3.5)+
coord_flip() +
xlab("Race") +
ylab("Total fatal shootings") +
labs(title="Barplot of Total Fatal Shootings",
subtitle="Total Fatal Shootings for different races")+
theme_bw()
data_by_race
data_by_race$total_in_us <- c(17708954,39977554,58479370,2160378,9271166,197100373,10^100)
data_by_race$counts_per_1000 <- round(data_by_race$counts/data_by_race$total_in_us * 1000,digits=5)
data_by_race %>%
mutate(race = fct_reorder(race, counts_per_1000)) %>%
ggplot(aes(x=race, y=counts_per_1000)) +
theme(axis.text.x = element_text(size = 12, angle=0, vjust=0.9),legend.position="top") +
geom_bar(stat="identity",fill = "#8e7cc3", alpha=.6, width=.4) +
geom_text(aes(label=counts_per_1000), hjust=0.2, color="black", size=3.5)+
coord_flip() +
xlab("Race") +
ylab("Fatal shootings every 1000 people in such race") +
labs(title="Barplot of Fatal Shootings every 1000 people from 2015-2021",
subtitle="Fatal Shootings every 1000 people for different races from 2015-2021")+
theme_bw()
data_by_race
data_state_loc <- data_shoot_eda  %>% group_by(state_loc,state) %>% summarise(counts = sum(count))
data_state_loc <- merge(data_state_loc, state_race, by=c("state"),all.x=TRUE)
state_income$mean_over_time <- rowMeans(state_income[,-1])
data_state_loc <- merge(data_state_loc, state_income, by=c("state"),all.x=TRUE)
data_state_loc$counts_per <- data_state_loc$counts/data_state_loc$Total_population_by_state * 1000
data_state_loc$mean_over_time_per <- data_state_loc$mean_over_time/data_state_loc$Total_population_by_state * 1000000
# Scatterplot
gg <- ggplot(data_state_loc, aes(x=mean_over_time_per, y=Total_population_by_state)) +
geom_point(aes(col=state_loc, size=counts_per)) +
xlim(c(30000, 100000)) +
ylim(c(0, 10000000)) +
labs(subtitle="Per Capita Mean Annual Personal income Vs Population",
y="Population of State",
x="Per Capita Mean Annual Personal income ($dollars)",
title="Scatterplot")
gg
geo(address = c("Tokyo", "Lima", "Nairobi"),
method = 'osm')
library(rworldmap)
# get map
worldmap <- getMap(resolution = "coarse")
plot(worldmap, xlim = c(-80, 160), ylim = c(-50, 100),
asp = 1, bg = "lightblue", col = "black", fill = T)
points(data_shoot$Longitude, data_shoot$Latitude,
col = "red", cex = .01)
